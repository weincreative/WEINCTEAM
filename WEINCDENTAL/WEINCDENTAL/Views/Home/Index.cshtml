@model  WEINCDENTAL.Models.ModelIstatistik
@{
    ViewBag.Title = "Anasayfa";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<!-- MAIN CONTENT -->
<div id="content">
    <!-- row -->
    <div class="row">
        <!-- col -->
        <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
            <h1 class="page-title txt-color-blueDark">
                <!-- PAGE HEADER -->
                <i class="fa-fw fa fa-home"></i>
                HOŞGELDİNİZ
            </h1>
        </div>


    </div>

    <section id="widget-grid" class="">

        <!-- row -->
        <div class="row">

            <!-- NEW WIDGET START -->
            <article class="col-xs-12 col-sm-6 col-md-6 col-lg-6">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-1" data-widget-editbutton="false" data-widget-fullscreenbutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-sortable="false">

                    <header>

                        <h2>@ViewBag.yil yılına ait Toplam Kazanç </h2>

                    </header>

                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->
                            <input class="form-control" type="text">
                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">

                            <!-- this is what the user will see -->
                            <canvas id="lineChart" height="120"></canvas>

                        </div>
                        <!-- end widget content -->

                    </div>
                    <!-- end widget div -->

                </div>


            </article>

        </div>

        <!-- end row -->
        <!-- row -->

        <div class="row">

            <!-- a blank row to get started -->
            <div class="col-sm-12">
                <!-- your contents here -->
            </div>

        </div>

        <!-- end row -->

    </section>

    <section id="widget-grid2" class="">

        <!-- row -->
        <div class="row">

            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-3">
                <div class="ibox float-e-margins">
                    <div class="ibox-title">
                        <span class="label label-success pull-right">@ViewBag.ay</span>
                        <h5> @ViewBag.yil - T.Yapılan Hizmet Bedeli (TL)</h5>
                    </div>
                    <div class="ibox-content">
                        <h1 class="no-margins">@Html.DisplayFor(model => model.TotalGelir)</h1>

                    </div>
                </div>
            </div>
            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-3">
                <div class="ibox float-e-margins">
                    <div class="ibox-title">
                        <span class="label label-info pull-right">@ViewBag.ay</span>
                        <h5> @ViewBag.yil - Toplam Nakit (TL)</h5>
                    </div>
                    <div class="ibox-content">
                        <h1 class="no-margins">@Html.DisplayFor(model => model.TotalNakit)</h1>

                    </div>
                </div>
            </div>
            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-3">
                <div class="ibox float-e-margins">
                    <div class="ibox-title">
                        <span class="label label-primary pull-right">@ViewBag.ay</span>
                        <h5> @ViewBag.yil - Toplam K.Kart (TL)</h5>
                    </div>
                    <div class="ibox-content">
                        <h1 class="no-margins">@Html.DisplayFor(model => model.TotalKKart)</h1>

                    </div>
                </div>
            </div>
            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-3">
                <div class="ibox float-e-margins">
                    <div class="ibox-title">
                        <span class="label label-danger pull-right">@ViewBag.ay</span>
                        <h5> @ViewBag.yil - Toplam Ödenecek (TL)</h5>
                    </div>
                    <div class="ibox-content">
                        <h1 class="no-margins">@Html.DisplayFor(model => model.TotalOdenecek)</h1>

                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-3">

                <div class="ibox float-e-margins">
                    <div class="ibox-title">
                        <span class="label label-danger pull-right">@ViewBag.ay</span>
                        <h5> @ViewBag.yil - Yapılan Hizmet Sayısı (Son 4 hizmet)</h5>
                    </div>
                    <div class="ibox-content">
                        <canvas id="pieChart" style="width: 100%; height: 100%;"></canvas>

                    </div>
                </div>
            </div>
        </div>
        <!-- end row -->
        <!-- row -->

        <div class="row">

            <!-- a blank row to get started -->
            <div class="col-sm-12">
                <!-- your contents here -->
            </div>

        </div>

        <!-- end row -->

    </section>


</div>

<style type="text/css">
    .ibox {
        font-family: "open sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
        background-color: #2f4050;
        font-size: 13px;
        color: #676a6c;
        overflow-x: hidden;
        clear: both;
        margin-bottom: 25px;
        margin-top: 0;
        padding: 0;
    }

    .float-e-margins .btn {
        margin-bottom: 5px;
    }

    .ibox-title {
        -moz-border-bottom-colors: none;
        -moz-border-left-colors: none;
        -moz-border-right-colors: none;
        -moz-border-top-colors: none;
        background-color: #ffffff;
        border-color: #e7eaec;
        border-image: none;
        border-style: solid solid none;
        border-width: 3px 0 0;
        color: inherit;
        margin-bottom: 0;
        padding: 14px 15px 7px;
        min-height: 48px;
    }

    .ibox-content {
        clear: both;
        background-color: #ffffff;
        color: inherit;
        padding: 15px 20px 20px 20px;
        border-color: #e7eaec;
        border-image: none;
        border-style: solid solid none;
        border-width: 1px 0;
    }

    .no-margins {
        margin: 0 !important;
    }

    .ibox-title > span {
        float: left;
        margin-left: 4px;
        font-family: 'Open Sans';
        font-size: 12px;
        padding: 3px 9px;
    }

    .ibox-title h5 {
        display: inline-block;
        font-size: 14px;
        margin: 0 0 7px;
        padding: 0;
        text-overflow: ellipsis;
        float: left;
    }
</style>

@section pagespecific {
    <script type="text/javascript">

        $(document).ready(function() {

            var array = @Html.Raw(Json.Encode(ViewBag.hizlist));
            var gelir = @Html.Raw(Json.Encode(@ViewBag.totalhizmet));
            pageSetUp();

            var lineOptions = {
                ///Boolean - Whether grid lines are shown across the chart
                scaleShowGridLines: true,
                //String - Colour of the grid lines
                scaleGridLineColor: "rgba(0,0,0,.05)",
                //Number - Width of the grid lines
                scaleGridLineWidth: 1,
                //Boolean - Whether the line is curved between points
                bezierCurve: true,
                //Number - Tension of the bezier curve between points
                bezierCurveTension: 0.4,
                //Boolean - Whether to show a dot for each point
                pointDot: true,
                //Number - Radius of each point dot in pixels
                pointDotRadius: 4,
                //Number - Pixel width of point dot stroke
                pointDotStrokeWidth: 1,
                //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
                pointHitDetectionRadius: 20,
                //Boolean - Whether to show a stroke for datasets
                datasetStroke: true,
                //Number - Pixel width of dataset stroke
                datasetStrokeWidth: 2,
                //Boolean - Whether to fill the dataset with a colour
                datasetFill: true,
                //Boolean - Re-draw chart on page resize
                responsive: true,
                //String - A legend template
                legendTemplate:
                    "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].lineColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>"
            };
            var lineData = {
                labels: [
                    "OCAK", "ŞUBAT", "MART", "NİSAN", "MAYIS", "HAZİRAN", "TEMMUZ", "AĞUSTOS", "EYLÜL", "EKİM", "KASIM",
                    "ARALIK"
                ],
                datasets: [
                    {
                        label: "My Second dataset",
                        fillColor: "rgba(151,187,205,0.2)",
                        strokeColor: "rgba(151,187,205,1)",
                        pointColor: "rgba(151,187,205,1)",
                        pointStrokeColor: "#fff",
                        pointHighlightFill: "#fff",
                        pointHighlightStroke: "rgba(151,187,205,1)",
                        data: gelir
                    }
                ]
            };

            // render chart
            var ctx2 = document.getElementById("lineChart").getContext("2d");
            var myNewChart2 = new Chart(ctx2).Line(lineData, lineOptions);

            // END LINE CHART


            var pieOptions = {
                //Boolean - Whether we should show a stroke on each segment
                segmentShowStroke: true,
                //String - The colour of each segment stroke
                segmentStrokeColor: "#fff",
                //Number - The width of each segment stroke
                segmentStrokeWidth: 2,
                //Number - Amount of animation steps
                animationSteps: 100,
                //String - types of animation
                animationEasing: "easeOutBounce",
                //Boolean - Whether we animate the rotation of the Doughnut
                animateRotate: true,
                //Boolean - Whether we animate scaling the Doughnut from the centre
                animateScale: false,
                //Boolean - Re-draw chart on page resize
                responsive: true,
                //String - A legend template
                legendTemplate:
                    "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><span style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>"
            };


            var pieData = [];
            //var rgbalist = ["rgba(53, 53, 255, 0.9)", "rgba(151,187,205,1)", "rgba(169, 3, 41, 0.7)",
            //    "rgba(144,171,86,1)"];

              //var countarray = array.length;
              //if (countarray) {

              //}
        array.forEach(function(element) {
            pieData.push({
                "value": element.HSay,
                "color": element.color,
                "highlight": element.highlight,
                "label": element.HAd
            });

        });

        // render chart
        var ctx = document.getElementById("pieChart").getContext("2d");
        var myNewChart = new Chart(ctx).Pie(pieData, pieOptions);


    });

    </script>
}