	@model WEINCDENTAL.Models.hst_hastakarti

@{
    /**/

    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
			<!-- MAIN CONTENT -->
<div id="content">

    <div class="row">
        <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
            <h1 class="page-title txt-color-blueDark">
                <!-- PAGE HEADER -->
                <i class="fa-fw fa fa-pencil-square-o"></i>
               Hasta Kartı
                
            </h1>
        </div>
       
    </div>
    
    <!-- widget grid -->
    <section id="widget-grid" class="">

        <!-- START ROW -->
        <div class="row">
            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-6">
                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-4" data-widget-editbutton="false" data-widget-colorbutton="false" data-widget-custombutton="false">
                    <!-- widget options:
                        usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                        data-widget-colorbutton="false"
                        data-widget-editbutton="false"
                        data-widget-togglebutton="false"
                        data-widget-deletebutton="false"
                        data-widget-fullscreenbutton="false"
                        data-widget-custombutton="false"
                        data-widget-collapsed="true"
                        data-widget-sortable="false"

                    -->
                    <header >
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>Hasta Bilgileri </h2>
                    </header>
                    <!-- widget div-->
                    <div>
                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->
                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body no-padding">
                        
                        @using (Html.BeginForm("Create", "hst_hastakarti", FormMethod.Post, new {id = "checkout-form", @class = "smart-form", novalidate = "novalidate"}))
                        {
                            @*<form id="checkout-form" class="smart-form" novalidate="novalidate">*@
                            <fieldset>
                                <div class="row">
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-tag"></i>
                                            @Html.EditorFor(model => model.t_tc, new { htmlAttributes = new { placeholder = "T.C.", Name = "tcname" } })
                                            @*@Html.ValidationMessageFor(model => model.t_tc, "", new { @class = "invalid" })*@
                                            @*<input type="text" name="fname" placeholder="First name">*@

                                        </label>
                                    </section>
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-user"></i>
                                            @Html.EditorFor(model => model.t_adi, new { htmlAttributes = new { placeholder = "Ad Giriniz", Name = "fname" } })
                                            @*<input type="text" name="fname" placeholder="First name">*@
                                        </label>
                                    </section>

                                </div>
                                <div class="row">
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-user"></i>
                                            @Html.EditorFor(model => model.t_soyadi, new { htmlAttributes = new { placeholder = "Soyad Giriniz", Name = "lname" } })
                                            @*@Html.ValidationMessageFor(model => model.t_tc, "", new { @class = "invalid" })*@
                                            @*<input type="text" name="fname" placeholder="First name">*@

                                        </label>
                                    </section>
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-user"></i>
                                            @Html.EditorFor(model => model.t_dogumyeri, new { htmlAttributes = new { placeholder = "Doğum Yeri Giriniz", Name = "dyeriname" } })
                                            @*<input type="text" name="fname" placeholder="First name">*@
                                        </label>
                                    </section>

                                </div>
                                <div class="row">
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-append fa fa-calendar"></i>
                                            @Html.EditorFor(model => model.t_dogumtarihi, new { htmlAttributes = new { Name = "startdate", @id = "startdate", placeholder = "Doğum tarihini giriniz" } })
                                            @*<input type="text" name="startdate" id="startdate" placeholder="Expected start date">*@
                                        </label>
                                    </section>
                                </div>
                                <div class="row">
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-phone"></i>
                                            @Html.EditorFor(model => model.t_tel1, new { htmlAttributes = new { placeholder = "Telefon 1 Giriniz", Name = "phone" } })
                                            @*@Html.ValidationMessageFor(model => model.t_tc, "", new { @class = "invalid" })*@
                                            @*<input type="text" name="fname" placeholder="First name">*@

                                        </label>
                                    </section>
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-phone"></i>
                                            @Html.EditorFor(model => model.t_tel2, new { htmlAttributes = new { placeholder = "Telefon 2 Giriniz", Name = "phone2" } })
                                            @*<input type="text" name="fname" placeholder="First name">*@
                                        </label>
                                    </section>

                                </div>
                                <div class="row">
                                    <section class="col col-6">
                                        <label class="select">
                                            @*<i class="icon-prepend fa fa-female"></i>*@
                                            @*<i class="icon-prepend fa fa-male"></i>*@
                                            @Html.DropDownList("t_cinsiyet", null, "--Cinsiyet Seç--", htmlAttributes: new { placeholder = "Cinsiyet Seçiniz", Name = "gender" })
                                            @*@Html.ValidationMessageFor(model => model.t_tc, "", new { @class = "invalid" })*@
                                            @*<input type="text" name="fname" placeholder="First name">*@

                                        </label>
                                    </section>
                                    <section class="col col-6">
                                        <label class="select">
                                            @Html.DropDownList("t_medenidurum", null, "--Medeni Durum Seç--", htmlAttributes: new { placeholder = "Medeni Durum Seçiniz", Name = "medeni" })
                                            @*@Html.ValidationMessageFor(model => model.t_tc, "", new { @class = "invalid" })*@
                                            @*<input type="text" name="fname" placeholder="First name">*@

                                        </label>
                                    </section>
                                </div>
                                <div class="row">
                                    <section class="col col-6">
                                        <label class="select">
                                            @*<i class="icon-prepend fa fa-female"></i>*@
                                            @*<i class="icon-prepend fa fa-male"></i>*@
                                            @Html.DropDownList("t_ilId", null, "--İl Seçiniz--", htmlAttributes: new { placeholder = "İl Seçiniz Seçiniz", Name = "country" })
                                            @*@Html.ValidationMessageFor(model => model.t_tc, "", new { @class = "invalid" })*@
                                            @*<input type="text" name="fname" placeholder="First name">*@

                                        </label>
                                    </section>
                                    <section class="col col-6">
                                        <label class="select">
                                            @Html.DropDownList("t_ilceId", null, "--İlçe Seçiniz--", htmlAttributes: new { placeholder = "İlçe  Seçiniz", Name = "city" })
                                            @*@Html.ValidationMessageFor(model => model.t_tc, "", new { @class = "invalid" })*@
                                            @*<input type="text" name="fname" placeholder="First name">*@

                                        </label>
                                    </section>
                                </div>
                                <div class="row">
                                    <section class="col col-lg-12">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-phone"></i>
                                            @Html.EditorFor(model => model.t_adres, new { htmlAttributes = new { placeholder = "Adres Giriniz", Name = "address" } })
                                            @*@Html.ValidationMessageFor(model => model.t_tc, "", new { @class = "invalid" })*@
                                            @*<input type="text" name="fname" placeholder="First name">*@
                                        </label>
                                    </section>

                                </div>


                            </fieldset>
                            <footer>
                                <button type="submit" class="btn btn-primary">
                                    Validate Form
                                </button>
                            </footer>
                            @*</form>*@

                        }</div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->
                </div>
                <!-- end widget -->
                <!-- Widget ID (each widget will need unique ID)-->
           
               
            </article>
            <!-- END COL -->
            <!-- NEW COL START -->
            
        </div>
        <!-- END ROW -->
    </section>
    <!-- end widget grid -->
    

</div>
<!-- END MAIN CONTENT -->
@section pagespecific {
    <script type="text/javascript">
           
        // DO NOT REMOVE : GLOBAL FUNCTIONS!

        $(document).ready(function() {
            ////document.getElementById('phone').addEventListener('input', function (e) {    
            ////    var x = e.target.value.replace(/\D/g, '').match(/(\d{0,3})(\d{0,3})(\d{0,4})/);    
            ////    e.target.value = !x[2] ? x[1] : '(' + x[1] + ') ' + x[2] + (x[3] ? '-' + x[3] : '');    
            ////}); 
            //$("#phone").mask("(999) 999-9999");
            var $checkoutForm = $('#checkout-form').validate({
                // Rules for form validation
                rules: {
                    fname: {
                        required: true
                    },
                    tcname: {
                        required: true
                    },
                    startdate: {
                        required: true
                    },
                    lname: {
                        required: true
                    },
                    email: {
                        required: true,
                        email: true
                    },
                    phone: {
                        required: true
                    },
                    phone2: {
                        required: true
                    },
                    country: {
                        required: true
                    },
                    dyeriname: {
                        required: true
                    },
                    city: {
                        required: true
                    },
                    code: {
                        required: true,
                        digits: true
                    },
                    address: {
                        required: true
                    },
                    gender: {
                    required: true
                    }, medeni: {
                        required: true
                    },
                    name: {
                        required: true
                    },
                    card: {
                        required: true,
                        creditcard: true
                    },
                    cvv: {
                        required: true,
                        digits: true
                    },
                    month: {
                        required: true
                    },
                    year: {
                        required: true,
                        digits: true
                    }
                },

                // Messages for form validation
                messages: {
                    fname: {
                        required: 'Please enter your first name'
                    },
                    lname: {
                        required: 'Please enter your last name'
                    },
                    dyeriname: {
                        required: 'Please enter your last name'
                    },
                    tcname: {
                        required: 'Lütfen T.C.No giriniz'
                    },
                    startdate: {
                        required: 'Lütfen Doğum tarihini  giriniz'
                    },
                    email: {
                        required: 'Please enter your email address',
                        email: 'Please enter a VALID email address'
                    },
                    phone: {
                        required: 'Please enter your phone number'
                    }, phone2: {
                        required: 'Please enter your phone number'
                    },
                    country: {
                        required: 'Please select your country'
                    },
                    city: {
                        required: 'Please enter your city'
                    },
                    code: {
                        required: 'Please enter code',
                        digits: 'Digits only please'
                    },
                    address: {
                        required: 'Please enter your full address'
                    },
                    name: {
                        required: 'Please enter name on your card'
                    },
                    card: {
                        required: 'Please enter your card number'
                    },
                    cvv: {
                        required: 'Enter CVV2',
                        digits: 'Digits only'
                    },
                    month: {
                        required: 'Select month'
                    },
                    gender: {
                        required: 'Please select your gender'
                    },
                    medeni: {
                        required: 'Please select your gender'
                    },
                    year: {
                        required: 'Enter year',
                        digits: 'Digits only please'
                    }
                },

                // Do not change code below
                errorPlacement: function(error, element) {
                    error.insertAfter(element.parent());
                }
            });

            var $registerForm = $("#smart-form-register").validate({

                // Rules for form validation
                rules: {
                    username: {
                        required: true
                    },
                    tcname: {
                        required: true
                    },
                    email: {
                        required: true,
                        email: true
                    },
                    password: {
                        required: true,
                        minlength: 3,
                        maxlength: 20
                    },
                    passwordConfirm: {
                        required: true,
                        minlength: 3,
                        maxlength: 20,
                        equalTo: '#password'
                    },
                    firstname: {
                        required: true
                    },
                    lastname: {
                        required: true
                    },
                    gender: {
                        required: true
                    },
                    terms: {
                        required: true
                    }
                },

                // Messages for form validation
                messages: {
                    login: {
                        required: 'Please enter your login'
                    },
                    email: {
                        required: 'Please enter your email address',
                        email: 'Please enter a VALID email address'
                    },
                    password: {
                        required: 'Please enter your password'
                    },
                    passwordConfirm: {
                        required: 'Please enter your password one more time',
                        equalTo: 'Please enter the same password as above'
                    },
                    firstname: {
                        required: 'Please select your first name'
                    },
                    lastname: {
                        required: 'Please select your last name'
                    },
                    gender: {
                        required: 'Please select your gender'
                    },
                    terms: {
                        required: 'You must agree with Terms and Conditions'
                    }
                },

                // Do not change code below
                errorPlacement: function(error, element) {
                    error.insertAfter(element.parent());
                }
            });


            var $orderForm = $("#order-form").validate({
                // Rules for form validation
                rules: {
                    name: {
                        required: true
                    },
                    email: {
                        required: true,
                        email: true
                    },
                    phone: {
                        required: true
                    },
                    interested: {
                        required: true
                    },
                    budget: {
                        required: true
                    }
                },

                // Messages for form validation
                messages: {
                    name: {
                        required: 'Please enter your name'
                    },
                    email: {
                        required: 'Please enter your email address',
                        email: 'Please enter a VALID email address'
                    },
                    phone: {
                        required: 'Please enter your phone number'
                    },
                    interested: {
                        required: 'Please select interested service'
                    },
                    budget: {
                        required: 'Please select your budget'
                    }
                },

                // Do not change code below
                errorPlacement: function(error, element) {
                    error.insertAfter(element.parent());
                }
            });

            // START AND FINISH DATE
            $('#startdate').datepicker({
                dateFormat: 'dd.mm.yy',
                prevText: '<i class="fa fa-chevron-left"></i>',
                nextText: '<i class="fa fa-chevron-right"></i>',
                onSelect: function(selectedDate) {
                    $('#finishdate').datepicker('option', 'minDate', selectedDate);
                }
            });

            $('#finishdate').datepicker({
                dateFormat: 'dd.mm.yy',
                prevText: '<i class="fa fa-chevron-left"></i>',
                nextText: '<i class="fa fa-chevron-right"></i>',
                onSelect: function(selectedDate) {
                    $('#startdate').datepicker('option', 'maxDate', selectedDate);
                }
            });


        });

    </script>
}