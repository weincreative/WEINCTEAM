//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WEINCDENTAL.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class WEINCDENTALEntities : DbContext
    {
        public WEINCDENTALEntities()
            : base("name=WEINCDENTALEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<adm_kullanicigrup> adm_kullanicigrup { get; set; }
        public virtual DbSet<adm_kullanicilar> adm_kullanicilar { get; set; }
        public virtual DbSet<adm_kullaniciyetki> adm_kullaniciyetki { get; set; }
        public virtual DbSet<adm_methods> adm_methods { get; set; }
        public virtual DbSet<adm_modulyetki> adm_modulyetki { get; set; }
        public virtual DbSet<adm_pacs> adm_pacs { get; set; }
        public virtual DbSet<hst_basvuru> hst_basvuru { get; set; }
        public virtual DbSet<hst_bölüm> hst_bölüm { get; set; }
        public virtual DbSet<hst_cene_uygunmu> hst_cene_uygunmu { get; set; }
        public virtual DbSet<hst_cinsiyet> hst_cinsiyet { get; set; }
        public virtual DbSet<hst_disno> hst_disno { get; set; }
        public virtual DbSet<hst_firma> hst_firma { get; set; }
        public virtual DbSet<hst_hastadurum> hst_hastadurum { get; set; }
        public virtual DbSet<hst_hastakarti> hst_hastakarti { get; set; }
        public virtual DbSet<hst_hastalik> hst_hastalik { get; set; }
        public virtual DbSet<hst_his_hareket> hst_his_hareket { get; set; }
        public virtual DbSet<hst_hizmet> hst_hizmet { get; set; }
        public virtual DbSet<hst_hizmet_parca> hst_hizmet_parca { get; set; }
        public virtual DbSet<hst_il> hst_il { get; set; }
        public virtual DbSet<hst_ilce> hst_ilce { get; set; }
        public virtual DbSet<hst_marka> hst_marka { get; set; }
        public virtual DbSet<hst_medenidurum> hst_medenidurum { get; set; }
        public virtual DbSet<hst_odemetip> hst_odemetip { get; set; }
        public virtual DbSet<hst_randevu> hst_randevu { get; set; }
        public virtual DbSet<hst_ulke> hst_ulke { get; set; }
        public virtual DbSet<hst_vezne> hst_vezne { get; set; }
        public virtual DbSet<View_BsvrVezne> View_BsvrVezne { get; set; }
        public virtual DbSet<View_CeneDis> View_CeneDis { get; set; }
        public virtual DbSet<View_HastalikDurum> View_HastalikDurum { get; set; }
        public virtual DbSet<View_HizHareket> View_HizHareket { get; set; }
        public virtual DbSet<View_HizmetDetay> View_HizmetDetay { get; set; }
        public virtual DbSet<View_kullaniciYetki> View_kullaniciYetki { get; set; }
        public virtual DbSet<View_Pacs> View_Pacs { get; set; }
        public virtual DbSet<View_Vezne> View_Vezne { get; set; }
    
        public virtual int sp_UVAktif(Nullable<int> bid)
        {
            var bidParameter = bid.HasValue ?
                new ObjectParameter("bid", bid) :
                new ObjectParameter("bid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UVAktif", bidParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_DeleteHhareket(Nullable<int> hhid)
        {
            var hhidParameter = hhid.HasValue ?
                new ObjectParameter("hhid", hhid) :
                new ObjectParameter("hhid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteHhareket", hhidParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_InsertVezne(Nullable<int> hareketid, Nullable<int> basid)
        {
            var hareketidParameter = hareketid.HasValue ?
                new ObjectParameter("hareketid", hareketid) :
                new ObjectParameter("hareketid", typeof(int));
    
            var basidParameter = basid.HasValue ?
                new ObjectParameter("basid", basid) :
                new ObjectParameter("basid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertVezne", hareketidParameter, basidParameter);
        }
    
        public virtual int sp_LastPay(Nullable<int> vid, Nullable<int> b_id)
        {
            var vidParameter = vid.HasValue ?
                new ObjectParameter("vid", vid) :
                new ObjectParameter("vid", typeof(int));
    
            var b_idParameter = b_id.HasValue ?
                new ObjectParameter("b_id", b_id) :
                new ObjectParameter("b_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LastPay", vidParameter, b_idParameter);
        }
    
        public virtual int sp_OdemeBitim(Nullable<int> basid)
        {
            var basidParameter = basid.HasValue ?
                new ObjectParameter("basid", basid) :
                new ObjectParameter("basid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OdemeBitim", basidParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int sp_VezneUpIlkKayit(Nullable<int> bsvid)
        {
            var bsvidParameter = bsvid.HasValue ?
                new ObjectParameter("bsvid", bsvid) :
                new ObjectParameter("bsvid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VezneUpIlkKayit", bsvidParameter);
        }
    }
}
